{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/Header.js","components/pages/about.js","components/pages/NotFound.js","components/test/Test.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","color","float","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","about","NotFound","Test","title","body","fetch","then","response","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updContact","alert","match","params","put","App","Context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.682285ad.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact =>\r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n// 2509\r\nclass Contact extends Component {\r\n  state={\r\n    showContactInfo:false\r\n  }\r\n  \r\n  onDeleteClick=async (id, dispatch)=>{\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type:'DELETE_CONTACT', payload:id})\r\n    }catch(e){\r\n      dispatch({type:'DELETE_CONTACT', payload:id})\r\n    }\r\n    \r\n    \r\n  };\r\n  render() {\r\n    const {id, name, email, phone}=this.props.contact;\r\n    const {showContactInfo}=this.state;\r\n    return (\r\n      <Consumer>\r\n        {value=>{\r\n          const {dispatch}=value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n        <h4>\r\n        {name} \r\n        <i \r\n        onClick={()=>\r\n        this.setState({showContactInfo:!this.state.showContactInfo})} \r\n        className=\"fas fa-sort-down\" style={{cursor:\"pointer\"}}></i>\r\n        <i \r\n        onClick={this.onDeleteClick.bind(this,id, dispatch)} \r\n        className=\"fas fa-times\" style={{cursor:\"pointer\", color:'red', float:'right'}}/>\r\n\r\n        <Link to={`contact/edit/${id}`}>\r\n        <i \r\n        onClick={this.onDeleteClick.bind(this,id, dispatch)} \r\n        className=\"fas fa-pencil-alt\" style={{cursor:\"pointer\", color:'black', float:'right', marginRight:'1rem'}}/>\r\n        </Link>\r\n       \r\n        </h4>\r\n        {showContactInfo?(<ul className=\"list-group\">\r\n          <li className=\"list-group-item\">Email: {email}</li>\r\n          <li className=\"list-group-item\">Phone: {phone}</li>\r\n        </ul>):null}\r\n        \r\n      </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    )\r\n  }\r\n}\r\nContact.propTypes={\r\n  contact:PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\nclass Contacts extends Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n        <Consumer>\r\n            {value=>{\r\n                const {contacts}=value;\r\n                return(\r\n                <React.Fragment>\r\n                  <h1 className=\"display-4 mb-2\">\r\n                  <span className=\"text-danger\">Contacts</span> List\r\n                  </h1>\r\n                {contacts.map(contact => (\r\n                  <Contact\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                  />\r\n                ))}\r\n              </React.Fragment>\r\n            )}}\r\n        </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i>Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () =>{\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager {}</h1>\r\n      <p className=\"lead\">Simple app to manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n      <p className=\"text-secondary\">This application based on Traversary media tutorial.</p>\r\n      <p className=\"text-secondary\">Developed by Harshan Madhuranga</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ()=> {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, this page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state={\r\n    title:\"\",\r\n    body:\"\"\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n    title:data.title, \r\n    body:data.body\r\n  }))\r\n  }\r\n  \r\n  render() {\r\n    const { title, body }=this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\"is-invalid\":error})}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n    \r\n  );\r\n};\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    error:PropTypes.string\r\n};\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors:{}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if(name===''){\r\n      this.setState({errors:{name:'Name is required'}})\r\n      return;\r\n    }\r\n    if(email===''){\r\n      this.setState({errors:{email:'Email is required'}})\r\n      return;\r\n    }\r\n    if(phone===''){\r\n      this.setState({errors:{phone:'Phone is required'}})\r\n      return;\r\n    }\r\n    \r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res=await axios.post('https://jsonplaceholder.typicode.com/users/', newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    \r\n    this.setState({ name: \"\", email: \"\", phone: \"\" ,error:{}});\r\n    this.props.history.push('/');\r\n  };\r\n  \r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors:{}\r\n  };\r\n  async componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    alert(\"This alert function may not works! It will fix soon..\");\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  \r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/about\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"./Context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound}/>\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}